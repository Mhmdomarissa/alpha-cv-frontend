"use client";

import { useState } from "react";

export default function HomePage() {
  const [cvs, setCvs] = useState<File[]>([]);
  const [jd, setJd] = useState<File | null>(null);
  const [results, setResults] = useState<any[]>([]);

  const handleSubmit = async () => {
    if (cvs.length === 0 || !jd) {
      alert("Please upload both CVs and a Job Description.");
      return;
    }

    const formData = new FormData();
    cvs.forEach(file => formData.append("files", file));
    formData.append("jd", jd);

    try {
      const res = await fetch("http::8000/upload/", {
        method: "POST",
        body: formData
      });

      if (res.ok) {
        const data = await res.json();
        setResults(data.candidates);
      } else {
        console.error("Upload failed:", await res.text());
        alert("Upload failed");
      }
    } catch (err) {
      console.error("Network error:", err);
      alert("Could not connect to server");
    }
  };

  return (
    <div className="p-6">
      <h1 className="text-xl font-bold">Upload CVs and Job Description</h1>
      <input type="file" multiple onChange={(e) => setCvs([...e.target.files!])} />
      <br />
      <input type="file" onChange={(e) => setJd(e.target.files![0])} />
      <br />
      <button onClick={handleSubmit}>Upload</button>

      {results.length > 0 && (
        <div className="mt-6">
          <h2 className="font-semibold">Results:</h2>
          {results.map((r, i) => (
            <div key={i} className="border p-3 my-2 bg-gray-100 rounded">
              <p><b>Name:</b> {r.full_name}</p>
              <p><b>Job Title:</b> {r.job_title}</p>
              <p><b>Text:</b> <pre className="whitespace-pre-wrap">{r.full_text}</pre></p>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
